name: Coding Standards
on:
  push:
    branches:
      - main
  pull_request:

jobs:
  # Runs PHP coding standards checks.
  #
  # Violations are reported inline with annotations.
  #
  # Performs the following steps:
  # - Checks out the repository.
  # - Configures caching for Composer.
  # - Sets up PHP.
  # - Logs debug information.
  # - Installs Composer dependencies (from cache if possible).
  # - Logs PHP_CodeSniffer debug information.
  # - Runs PHPCS on the full codebase with warnings suppressed.
  # - Runs PHPCS on the `tests` directory without warnings suppressed.
  # - todo: Configure Slack notifications for failing scans.
  phpcs:
    name: PHP Coding Standards
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Get Composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Set up Composer caching
        uses: actions/cache@v2
        env:
          cache-name: cache-composer-dependencies
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          coverage: none
          tools: composer, cs2pr

      - name: Install Composer dependencies
        run: |
          composer install --prefer-dist --no-suggest --no-progress --no-ansi --no-interaction
          echo "vendor/bin" >> $GITHUB_PATH

      - name: Log PHPCS debug information
        run: phpcs -i

      - name: Run PHPCS on all Core files
        run: vendor/bin/phpcs --standard=phpcs.ruleset.xml --extensions=php --colors -s -p -v .

      - name: Check test suite files for warnings
        run: vendor/bin/phpcs tests --standard=phpcs.ruleset.xml --extensions=php --colors -s -p -v .

  # Runs the JavaScript coding standards checks.
  #
  # Performs the following steps:
  # - Checks out the repository.
  # - Logs debug information about the runner container.
  # - Installs NodeJS 12 (todo: install the version of NPM specified in the `.nvmrc` file to support older branches)
  # - Sets up caching for NPM.
  # - Logs updated debug information.
  # _ Installs NPM dependencies.
  # - Run the WordPress JSHint checks.
  # - todo: Configure Slack notifications for failing tests.
  jshint:
    name: JavaScript Coding Standards
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log debug information
        run: |
          npm --version
          node --version
          git --version
          php --version
          composer --version

      - name: Install NodeJS
        uses: actions/setup-node@v2
        with:
          node-version-file: '.nvmrc'

      - name: NPM install
        run: npm ci --legacy-peer-deps

      - name: Run JSHint
        run: npm run lint:js
        if: ${{ success() || failure() }}
